[{"path":[]},{"path":"/CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, gender identity expression, level experience, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"/CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"/CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"/CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"/CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team jacob.long@sc.edu. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"/CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct/","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Jacob . Long Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/categorical.html","id":"simple-two-way-interaction","dir":"Articles","previous_headings":"","what":"Simple two-way interaction","title":"Plotting interactions among categorical variables in regression models","text":"First, let’s prep data. ’m going make slight changes mpg dataset ggplot2 didactic purposes drop factor levels almost values (e.g., 5 cylinder engines?). basically ’re looking interaction number cylinders engine cars whether car -wheel drive two-wheel drive. DV fuel mileage city. ’s summary output model: Let’s see happens using default arguments:  geom = \"point\". can see main effect cyl maybe something going interaction well, since different 2wd 4wd seems decrease cyl gets higher. can also plot observed data plot:","code":"library(ggplot2) mpg2 <- mpg mpg2$cyl <- factor(mpg2$cyl) mpg2[\"auto\"] <- \"auto\" mpg2$auto[mpg2$trans %in% c(\"manual(m5)\", \"manual(m6)\")] <- \"manual\" mpg2$auto <- factor(mpg2$auto) mpg2[\"fwd\"] <- \"2wd\" mpg2$fwd[mpg2$drv == \"4\"] <- \"4wd\" mpg2$fwd <- factor(mpg2$fwd) ## Drop the two cars with 5 cylinders (rest are 4, 6, or 8) mpg2 <- mpg2[mpg2$cyl != \"5\",] ## Fit the model fit3 <- lm(cty ~ cyl * fwd * auto, data = mpg2) library(jtools) # for summ() summ(fit3) ## MODEL INFO: ## Observations: 230 ## Dependent Variable: cty ## Type: OLS linear regression  ##  ## MODEL FIT: ## F(11,218) = 61.37, p = 0.00 ## R² = 0.76 ## Adj. R² = 0.74  ##  ## Standard errors: OLS ## ----------------------------------------------------------- ##                                 Est.   S.E.   t val.      p ## ---------------------------- ------- ------ -------- ------ ## (Intercept)                    21.37   0.39    54.19   0.00 ## cyl6                           -4.37   0.54    -8.07   0.00 ## cyl8                           -8.37   0.67   -12.51   0.00 ## fwd4wd                         -2.91   0.76    -3.83   0.00 ## automanual                      1.45   0.57     2.56   0.01 ## cyl6:fwd4wd                     0.59   0.96     0.62   0.54 ## cyl8:fwd4wd                     2.13   0.99     2.15   0.03 ## cyl6:automanual                -0.76   0.90    -0.84   0.40 ## cyl8:automanual                 0.71   1.18     0.60   0.55 ## fwd4wd:automanual              -1.66   1.07    -1.56   0.12 ## cyl6:fwd4wd:automanual          1.29   1.52     0.85   0.40 ## cyl8:fwd4wd:automanual         -1.39   1.76    -0.79   0.43 ## ----------------------------------------------------------- cat_plot(fit3, pred = cyl, modx = fwd) cat_plot(fit3, pred = cyl, modx = fwd, plot.points = TRUE)"},{"path":"/articles/categorical.html","id":"line-plots","dir":"Articles","previous_headings":"","what":"Line plots","title":"Plotting interactions among categorical variables in regression models","text":"since cyl clear order, might make sense connect dots. Let’s try geom = \"line\":  Okay, makes trend quite bit clearer. options, . Suppose need plot look good black white. Let’s change shape points different values moderator.  can change line patterns well clarity.  may also choose color palette RColorBrewer well several preset palettes available jtools:  Use ?jtools_colors color options.","code":"cat_plot(fit3, pred = cyl, modx = fwd, geom = \"line\") cat_plot(fit3, pred = cyl, modx = fwd, geom = \"line\", point.shape = TRUE) cat_plot(fit3, pred = cyl, modx = fwd, geom = \"line\", point.shape = TRUE,          vary.lty = TRUE) cat_plot(fit3, pred = cyl, modx = fwd, geom = \"line\", point.shape = TRUE,          colors = \"Set2\")"},{"path":"/articles/categorical.html","id":"bardynamite-plots","dir":"Articles","previous_headings":"","what":"Bar/dynamite plots","title":"Plotting interactions among categorical variables in regression models","text":"Last least, can also make bar charts, AKA dynamite plots. many situations, best way show data, know ’s lot people looking .  transparency fill color depends presence error bars observed data points.  Now let’s look observed data:","code":"cat_plot(fit3, pred = cyl, modx = fwd, geom = \"bar\") cat_plot(fit3, pred = cyl, modx = fwd, geom = \"bar\", interval = FALSE) cat_plot(fit3, pred = cyl, modx = fwd, geom = \"bar\", interval = FALSE,          plot.points = TRUE)"},{"path":"/articles/interactions.html","id":"plotting-interactions","dir":"Articles","previous_headings":"","what":"Plotting interactions","title":"Exploring interactions with continuous predictors in regression models","text":"versatile sometimes interpretable method understanding interaction effects via plotting. interactions provides interact_plot relatively pain-free method get good-looking plots interactions using ggplot2 backend.  Keep mind default behavior interact_plot mean-center continuous variables involved interaction predicted values easily interpreted. can disable adding centered = \"none\". can choose specific variables providing names vector centered argument. default, continuous moderator get three lines — 1 standard deviation mean mean . specify modx.values = \"plus-minus\", mean moderator plotted, just two +/- SD lines. may also choose \"terciles\" split data three equal-sized groups — representing upper, middle, lower thirds distribution moderator — get line represents median moderator within groups. moderator factor, level plotted leave modx.values = NULL, default.  want, can specify subset factor’s levels via modx.values argument:","code":"interact_plot(fiti, pred = Illiteracy, modx = Murder) fitiris <- lm(Petal.Length ~ Petal.Width * Species, data = iris) interact_plot(fitiris, pred = Petal.Width, modx = Species) interact_plot(fitiris, pred = Petal.Width, modx = Species,               modx.values = c(\"versicolor\", \"virginica\"))"},{"path":"/articles/interactions.html","id":"plotting-observed-data","dir":"Articles","previous_headings":"Plotting interactions","what":"Plotting observed data","title":"Exploring interactions with continuous predictors in regression models","text":"want see individual data points plotted better understand fitted lines related observed data, can use plot.points = TRUE argument.  continuous moderators, can see, observed data points shaded depending level moderator variable. can enlightening, , categorical moderators.  many points slightly overlapping , can useful apply random “jitter” move slightly stop overlap. Use jitter argument . provide single number apply jitter proportional magnitude sideways . provide vector length 2, first assumed refer left/right jitter second /jitter. like better differentiate points factor moderators, can use point.shape = TRUE give different shape point. can especially helpful black white publications.  original data weighted, points sized based weight. purposes example, ’ll weight model ’ve using population state.  working weighted data, can hard use scatterplot explore data unless way account weights. Using size nice middle ground.","code":"interact_plot(fiti, pred = Illiteracy, modx = Murder, plot.points = TRUE) interact_plot(fitiris, pred = Petal.Width, modx = Species,               plot.points = TRUE) interact_plot(fitiris, pred = Petal.Width, modx = Species,               plot.points = TRUE, jitter = 0.1, point.shape = TRUE) fiti <- lm(Income ~ Illiteracy * Murder, data = states,            weights = Population) interact_plot(fiti, pred = Illiteracy, modx = Murder, plot.points = TRUE)"},{"path":"/articles/interactions.html","id":"plotting-partial-residuals","dir":"Articles","previous_headings":"Plotting interactions","what":"Plotting partial residuals","title":"Exploring interactions with continuous predictors in regression models","text":"complex regressions, plotting observed data can sometimes relatively uninformative points seem place. example, let’s take look model. using mpg dataset ggplot2 predicting city miles per gallon (cty) based several variables, including model year, type car, fuel type, drive type, interaction engine displacement (displ) number cylinders engine (cyl). Let’s take look regression output: Okay, explaining lot variance quite bit going . Let’s plot interaction observed data.  Hmm, doesn’t look…bad? can kind see pattern interaction, predicted lines don’t seem match data well. included lot variables besides cyl displ model may accounting variation. partial residual plots designed help . can learn technique theory Fox Weisberg (2018) another place generate partial residual plots Fox’s effects package. Using argument partial.residuals = TRUE, plotted instead observed data effects control variables accounted . words, value cty observed data based values displ, cyl, model error. Let’s take look.  Now can understand observed data model relate much better. One insight model really underestimates values low end displacement cylinders. can also see much cylinders displacement seem correlated , makes difficult say much can learn kind model.","code":"library(ggplot2) data(cars) fitc <- lm(cty ~ year + cyl * displ + class + fl + drv, data = mpg) summ(fitc) ## MODEL INFO: ## Observations: 234 ## Dependent Variable: cty ## Type: OLS linear regression  ##  ## MODEL FIT: ## F(16,217) = 99.73, p = 0.00 ## R² = 0.88 ## Adj. R² = 0.87  ##  ## Standard errors: OLS ## ------------------------------------------------------- ##                            Est.    S.E.   t val.      p ## --------------------- --------- ------- -------- ------ ## (Intercept)             -200.98   47.01    -4.28   0.00 ## year                       0.12    0.02     5.03   0.00 ## cyl                       -1.86    0.28    -6.69   0.00 ## displ                     -3.56    0.66    -5.41   0.00 ## classcompact              -2.60    0.93    -2.80   0.01 ## classmidsize              -2.63    0.93    -2.82   0.01 ## classminivan              -4.41    1.04    -4.24   0.00 ## classpickup               -4.37    0.93    -4.68   0.00 ## classsubcompact           -2.38    0.93    -2.56   0.01 ## classsuv                  -4.27    0.87    -4.92   0.00 ## fld                        6.34    1.69     3.74   0.00 ## fle                       -4.57    1.66    -2.75   0.01 ## flp                       -1.92    1.59    -1.21   0.23 ## flr                       -0.79    1.57    -0.50   0.61 ## drvf                       1.40    0.40     3.52   0.00 ## drvr                       0.49    0.46     1.06   0.29 ## cyl:displ                  0.36    0.08     4.56   0.00 ## ------------------------------------------------------- interact_plot(fitc, pred = displ, modx = cyl, plot.points = TRUE,               modx.values = c(4, 5, 6, 8)) interact_plot(fitc, pred = displ, modx = cyl, partial.residuals = TRUE,               modx.values = c(4, 5, 6, 8))"},{"path":"/articles/interactions.html","id":"confidence-bands","dir":"Articles","previous_headings":"Plotting interactions","what":"Confidence bands","title":"Exploring interactions with continuous predictors in regression models","text":"Another way get sense precision estimates plotting confidence bands. get started, just set interval = TRUE. decide wide confidence interval , express percentile number, e.g., int.width = 0.8 corresponds 80% interval.  can also use robust argument plot confidence intervals based robust standard error calculations.","code":"interact_plot(fiti, pred = Illiteracy, modx = Murder, interval = TRUE,               int.width = 0.8)"},{"path":"/articles/interactions.html","id":"check-linearity-assumption","dir":"Articles","previous_headings":"Plotting interactions","what":"Check linearity assumption","title":"Exploring interactions with continuous predictors in regression models","text":"basic assumption linear regression relationship predictors response variable linear. interaction effect, add assumption relationship predictor response linear regardless level moderator. show striking example can work, ’ll generate two simple datasets replicate Hainmueller et al. (2017). first focal predictor XX normally distributed mean 3 standard deviation 1. dichotomous moderator WW Bernoulli distributed mean probability 0.5. also generate normally distributed error term standard deviation 4. fit linear regression model interaction x w. following plot, use linearity.check = TRUE argument split data level moderator WW plot predicted lines (black) loess line (red) within group. predicted lines come full data set. loess line looks subset data pane curved relationship nonlinear. ’re looking whether red loess line straight like predicted line.  case, . means assumption satisfied. Now generate similar data, time linearity assumption violated. X2X_2 now uniformly distributed across range -3 3. true relationship y_2 X2X_2 (x_2) non-linear. regression output lead us believe interaction. Let’s linearity check:  striking example assumption violated. levels WW, relationship X2X_2 response non-linear. really interaction, ’s non-linear one. try fit true model polynomial term like : interact_plot can plot kinds effects, . Just provide untransformed predictor’s name (case, x_2) also include data data argument. don’t include data, function try find data used warn cause problems circumstances.  Look familiar? Let’s linearity.check, case like non-linearity check:  red loess line almost perfectly overlaps black predicted line, indicating assumption satisfied. note warning, practice lines rarely overlap neatly make difficult judgment calls.","code":"set.seed(99) x <- rnorm(n = 200, mean = 3, sd = 1) err <- rnorm(n = 200, mean = 0, sd = 4) w <- rbinom(n = 200, size = 1, prob = 0.5)  y_1 <- 5 - 4*x - 9*w + 3*w*x + err model_1 <- lm(y_1 ~ x * w) summ(model_1) ## MODEL INFO: ## Observations: 200 ## Dependent Variable: y_1 ## Type: OLS linear regression  ##  ## MODEL FIT: ## F(3,196) = 25.93, p = 0.00 ## R² = 0.28 ## Adj. R² = 0.27  ##  ## Standard errors: OLS ## ------------------------------------------------ ##                      Est.   S.E.   t val.      p ## ----------------- ------- ------ -------- ------ ## (Intercept)          3.19   1.29     2.47   0.01 ## x                   -3.59   0.42    -8.61   0.00 ## w                   -7.77   1.90    -4.10   0.00 ## x:w                  2.86   0.62     4.62   0.00 ## ------------------------------------------------ interact_plot(model_1, pred = x, modx = w, linearity.check = TRUE,                plot.points = TRUE) x_2 <- runif(n = 200, min = -3, max = 3) y_2 <- 2.5 - x_2^2 - 5*w + 2*w*(x_2^2) + err data_2 <- as.data.frame(cbind(x_2, y_2, w))  model_2 <- lm(y_2 ~ x_2 * w, data = data_2) summ(model_2) ## MODEL INFO: ## Observations: 200 ## Dependent Variable: y_2 ## Type: OLS linear regression  ##  ## MODEL FIT: ## F(3,196) = 3.28, p = 0.02 ## R² = 0.05 ## Adj. R² = 0.03  ##  ## Standard errors: OLS ## ------------------------------------------------ ##                      Est.   S.E.   t val.      p ## ----------------- ------- ------ -------- ------ ## (Intercept)         -0.75   0.49    -1.51   0.13 ## x_2                  0.53   0.30     1.77   0.08 ## w                    1.63   0.72     2.28   0.02 ## x_2:w               -0.25   0.42    -0.61   0.54 ## ------------------------------------------------ interact_plot(model_2, pred = x_2, modx = w, linearity.check = TRUE,                plot.points = TRUE) model_3 <- lm(y_2 ~ poly(x_2, 2) * w, data = data_2) summ(model_3) ## MODEL INFO: ## Observations: 200 ## Dependent Variable: y_2 ## Type: OLS linear regression  ##  ## MODEL FIT: ## F(5,194) = 18.32, p = 0.00 ## R² = 0.32 ## Adj. R² = 0.30  ##  ## Standard errors: OLS ## ----------------------------------------------------- ##                           Est.   S.E.   t val.      p ## --------------------- -------- ------ -------- ------ ## (Intercept)              -1.01   0.42    -2.41   0.02 ## poly(x_2, 2)1             9.90   6.14     1.61   0.11 ## poly(x_2, 2)2           -34.14   6.15    -5.55   0.00 ## w                         1.61   0.61     2.65   0.01 ## poly(x_2, 2)1:w          -6.33   8.60    -0.74   0.46 ## poly(x_2, 2)2:w          75.58   8.62     8.77   0.00 ## ----------------------------------------------------- interact_plot(model_3, pred = x_2, modx = w, data = data_2) interact_plot(model_3, pred = x_2, modx = w, data = data_2,               linearity.check = TRUE, plot.points = TRUE)"},{"path":"/articles/interactions.html","id":"other-options","dir":"Articles","previous_headings":"Plotting interactions","what":"Other options","title":"Exploring interactions with continuous predictors in regression models","text":"number options mentioned, many relating appearance. instance, can manually specify axis labels, add main title, choose color scheme, .  function uses ggplot2, can modified extended like ggplot2 object. example, using theme_apa function jtools:","code":"interact_plot(fiti, pred = Illiteracy, modx = Murder,               x.label = \"Custom X Label\", y.label = \"Custom Y Label\",               main.title = \"Sample Plot\",  legend.main = \"Custom Legend Title\",               colors = \"seagreen\") interact_plot(fitiris, pred = Petal.Width, modx = Species) + theme_apa()"},{"path":"/articles/interactions.html","id":"simple-slopes-analysis-and-johnson-neyman-intervals","dir":"Articles","previous_headings":"","what":"Simple slopes analysis and Johnson-Neyman intervals","title":"Exploring interactions with continuous predictors in regression models","text":"Simple slopes analysis gives researchers way express interaction effect terms easy understand know interpret direct effects regression models. method designed continuous variable continuous variable interactions, can work moderator binary. simple slopes analysis, researchers interested conditional slope focal predictor; , slope predictor moderator held particular value? regression output get including interaction term tells us slope moderator held zero, often practically/theoretically meaningful value. better understand nature interaction, simple slopes analysis allows researcher specify meaningful values hold moderator value. computation behind isn’t exactly rocket science, inconvenient prone error. sim_slopes function interactions accepts regression model (interaction term) input automates simple slopes procedure. function , default, following: Mean-center non-focal predictors (setting zero means setting mean) continuous moderators, choose mean well mean plus/minus 1 standard deviation values find slope focal predictor. categorical/binary moderators, find slope focal predictor level moderator. basic use case, sim_slopes needs three arguments: regression model, name focal predictor argument pred =, name moderator argument modx =. Let’s go example. Now let’s basic simple slopes analysis: see example value Murder high, slope Illiteracy negative significantly different zero. value Illiteracy Murder high opposite direction coefficient estimate first version model fit lm result makes sense considering interaction coefficient negative; means one variables goes , goes . Now know effect Illiteracy exists Murder high. may also choose values moderator modx.values = argument. Bear mind estimates managed refitting models. model took long time fit first time, expect long run time sim_slopes.","code":"sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = FALSE) ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of Illiteracy when Murder =  5.420973 (- 1 SD):  ##  ##     Est.     S.E.   t val.      p ## -------- -------- -------- ------ ##   -17.43   250.08    -0.07   0.94 ##  ## Slope of Illiteracy when Murder =  8.685043 (Mean):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -399.64   178.86    -2.23   0.03 ##  ## Slope of Illiteracy when Murder = 11.949113 (+ 1 SD):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -781.85   189.11    -4.13   0.00 sim_slopes(fiti, pred = Illiteracy, modx = Murder, modx.values = c(0, 5, 10),            johnson_neyman = FALSE) ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of Illiteracy when Murder =  0.00:  ##  ##     Est.     S.E.   t val.      p ## -------- -------- -------- ------ ##   617.34   434.85     1.42   0.16 ##  ## Slope of Illiteracy when Murder =  5.00:  ##  ##    Est.     S.E.   t val.      p ## ------- -------- -------- ------ ##   31.86   262.63     0.12   0.90 ##  ## Slope of Illiteracy when Murder = 10.00:  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -553.62   171.42    -3.23   0.00"},{"path":"/articles/interactions.html","id":"visualize-the-coefficients","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals","what":"Visualize the coefficients","title":"Exploring interactions with continuous predictors in regression models","text":"Similar package’s plot_coefs/plot_summs functions offer, can save sim_slopes output object call plot object.","code":"ss <- sim_slopes(fiti, pred = Illiteracy, modx = Murder,                   modx.values = c(0, 5, 10)) plot(ss)"},{"path":"/articles/interactions.html","id":"tabular-output","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals","what":"Tabular output","title":"Exploring interactions with continuous predictors in regression models","text":"can also use huxtable package get publication-style table sim_slopes output.","code":"ss <- sim_slopes(fiti, pred = Illiteracy, modx = Murder,                  modx.values = c(0, 5, 10)) library(huxtable) as_huxtable(ss)"},{"path":"/articles/interactions.html","id":"johnson-neyman-intervals","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals","what":"Johnson-Neyman intervals","title":"Exploring interactions with continuous predictors in regression models","text":"notice adding argument johnson_neyman = FALSE ? ’s default, sim_slopes also calculate called Johnson-Neyman interval. tells values moderator slope predictor statistically significant. Depending specific analysis, may values moderator outside interval significant slope predictor. times, values inside interval—look output see. can take moment interpret correctly aren’t familiar Johnson-Neyman technique. read output carefully take literally, ’ll get hang . example , can see Johnson-Neyman interval simple slopes analysis agree—always . benefit J-N interval tell exactly predictor’s slope becomes significant/insignificant specified alpha level. can also call johnson_neyman function directly want something like tweak alpha level. johnson_neyman function also create plot default — can get setting jnplot = TRUE sim_slopes.  note Johnson-Neyman plots: , easy misinterpret meaning. Notice y-axis conditional slope predictor. plot shows conditional slope differs significantly zero. plot , see point Murder (moderator) = 9.12 greater, slope Illiteracy (predictor) significantly different zero case negative. lower bound interval (-32) far outside observed data plotted. -32 value Murder rate, though, threshold slope Illiteracy become positive. purpose reminding within plot printed output range observed data help put results context; case, justifiable interpretation Illiteracy effect outcome variable except Murder higher 8.16. wouldn’t interpret lower boundary dataset doesn’t contain values near .","code":"sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = TRUE) ## JOHNSON-NEYMAN INTERVAL  ##  ## When Murder is OUTSIDE the interval [-6.37, 8.41], the slope of ## Illiteracy is p < .05. ##  ## Note: The range of observed values of Murder is [1.40, 15.10] ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of Illiteracy when Murder =  5.420973 (- 1 SD):  ##  ##     Est.     S.E.   t val.      p ## -------- -------- -------- ------ ##   -17.43   250.08    -0.07   0.94 ##  ## Slope of Illiteracy when Murder =  8.685043 (Mean):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -399.64   178.86    -2.23   0.03 ##  ## Slope of Illiteracy when Murder = 11.949113 (+ 1 SD):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -781.85   189.11    -4.13   0.00 johnson_neyman(fiti, pred = Illiteracy, modx = Murder, alpha = .05) ## JOHNSON-NEYMAN INTERVAL  ##  ## When Murder is OUTSIDE the interval [-10.61, 8.16], the slope of ## Illiteracy is p < .05. ##  ## Note: The range of observed values of Murder is [1.40, 15.10]"},{"path":"/articles/interactions.html","id":"false-discovery-rate-adjustment","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals","what":"False discovery rate adjustment","title":"Exploring interactions with continuous predictors in regression models","text":"recent publication (Esarey & Sumner, 2017) explored ways calculate Johnson-Neyman interval properly manages Type II error rates. Others noted alpha level implied Johnson-Neyman interval won’t quite right (e.g., Bauer & Curran, 2005), hasn’t general solution gotten wide acceptance research literature just yet. basic problem Johnson-Neyman interval essentially bunch comparisons across values moderator, one inflating Type error rate. issue isn’t much can’t possibly address , many solutions far conservative others aren’t broadly applicable. Esarey Sumner (2017), among contributions, suggested adjustment seems good job balancing desire conservative test without missing lot true effects process. won’t go details . implementation johnson_neyman based code adapted Esarey Sumner’s interactionTest package, errors assumed interactions, . use feature, simply set control.fdr = TRUE call johnson_neyman sim_slopes. case, can see interval just little bit wider. output reports adjusted test statistic, 2.33, much different (approximately) 2 used otherwise. cases may quite bit larger.","code":"sim_slopes(fiti, pred = Illiteracy, modx = Murder, johnson_neyman = TRUE,            control.fdr = TRUE) ## JOHNSON-NEYMAN INTERVAL  ##  ## When Murder is OUTSIDE the interval [-15.78, 8.84], the slope of ## Illiteracy is p < .05. ##  ## Note: The range of observed values of Murder is [1.40, 15.10] ##  ## Interval calculated using false discovery rate adjusted t = 2.35  ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of Illiteracy when Murder =  5.420973 (- 1 SD):  ##  ##     Est.     S.E.   t val.      p ## -------- -------- -------- ------ ##   -17.43   250.08    -0.07   0.94 ##  ## Slope of Illiteracy when Murder =  8.685043 (Mean):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -399.64   178.86    -2.23   0.03 ##  ## Slope of Illiteracy when Murder = 11.949113 (+ 1 SD):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -781.85   189.11    -4.13   0.00"},{"path":[]},{"path":"/articles/interactions.html","id":"conditional-intercepts","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals > Additional options","what":"Conditional intercepts","title":"Exploring interactions with continuous predictors in regression models","text":"Sometimes informative know conditional intercepts addition slopes. might interesting individuals low moderator positive slope individuals high don’t, doesn’t mean individuals low moderator higher values dependent variable. know know conditional intercept. Plotting easy way notice , can console output well. can print conditional intercepts cond.int = TRUE argument. example shows slope associated Illiteracy negative Murder high, conditional intercept also high Murder high. tells increases Illiteracy high-Murder observations tend towards equal Income observations lower values Murder.","code":"sim_slopes(fiti, pred = Illiteracy, modx = Murder, cond.int = TRUE) ## JOHNSON-NEYMAN INTERVAL  ##  ## When Murder is OUTSIDE the interval [-6.37, 8.41], the slope of ## Illiteracy is p < .05. ##  ## Note: The range of observed values of Murder is [1.40, 15.10] ##  ## SIMPLE SLOPES ANALYSIS  ##  ## When Murder =  5.420973 (- 1 SD):  ##  ##                                  Est.     S.E.   t val.      p ## --------------------------- --------- -------- -------- ------ ## Slope of Illiteracy            -17.43   250.08    -0.07   0.94 ## Conditional intercept         4618.50   229.76    20.10   0.00 ##  ## When Murder =  8.685043 (Mean):  ##  ##                                  Est.     S.E.   t val.      p ## --------------------------- --------- -------- -------- ------ ## Slope of Illiteracy           -399.64   178.86    -2.23   0.03 ## Conditional intercept         5097.72   239.69    21.27   0.00 ##  ## When Murder = 11.949113 (+ 1 SD):  ##  ##                                  Est.     S.E.   t val.      p ## --------------------------- --------- -------- -------- ------ ## Slope of Illiteracy           -781.85   189.11    -4.13   0.00 ## Conditional intercept         5576.95   340.70    16.37   0.00"},{"path":"/articles/interactions.html","id":"robust-standard-errors","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals > Additional options","what":"Robust standard errors","title":"Exploring interactions with continuous predictors in regression models","text":"Certain models require heteroskedasticity-robust standard errors. consistent reporting heteroskedasticity-robust standard errors offered summ, sim_slopes use robust option can consistently report standard errors across models. data relatively rare case robust standard errors even efficient typical OLS standard errors. Note must sandwich package installed use feature.","code":"sim_slopes(fiti, pred = Illiteracy, modx = Murder, robust = \"HC3\") ## JOHNSON-NEYMAN INTERVAL  ##  ## When Murder is OUTSIDE the interval [-3.34, 8.14], the slope of ## Illiteracy is p < .05. ##  ## Note: The range of observed values of Murder is [1.40, 15.10] ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of Illiteracy when Murder =  5.420973 (- 1 SD):  ##  ##     Est.     S.E.   t val.      p ## -------- -------- -------- ------ ##   -17.43   227.37    -0.08   0.94 ##  ## Slope of Illiteracy when Murder =  8.685043 (Mean):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -399.64   158.77    -2.52   0.02 ##  ## Slope of Illiteracy when Murder = 11.949113 (+ 1 SD):  ##  ##      Est.     S.E.   t val.      p ## --------- -------- -------- ------ ##   -781.85   156.96    -4.98   0.00"},{"path":"/articles/interactions.html","id":"centering-variables","dir":"Articles","previous_headings":"Simple slopes analysis and Johnson-Neyman intervals > Additional options","what":"Centering variables","title":"Exploring interactions with continuous predictors in regression models","text":"default, non-focal variables mean-centered. may also request variables centered centered = \"none\". may also request specific variables center providing vector quoted variable names — others centered case. Note moderator centered around specified values. Factor variables ignored centering process just held observed values.","code":""},{"path":"/articles/interactions.html","id":"do-simple-slopes-and-plotting-with-one-function","dir":"Articles","previous_headings":"","what":"Do simple slopes and plotting with one function","title":"Exploring interactions with continuous predictors in regression models","text":"won’t use functions long may find using model want explore. streamline process, package offers probe_interaction() convenience function calls sim_slopes() interact_plot(), taking advantage overlapping syntax.   Note example can provide arguments apply one function used appropriately. hand, apply overlapping functions selectively. , can’t one centered = \"\" centered = \"none\". want level control, just call function separately. returns object two functions’ return objects: Also, example comes survey package means show , yes, tools can used svyglm objects. also tested glm, merMod, rq models, though always homework decide whether procedures appropriate cases.","code":"library(survey) data(api) dstrat <- svydesign(id = ~1, strata = ~stype, weights = ~pw,                     data = apistrat, fpc = ~fpc) regmodel <- svyglm(api00 ~ avg.ed * growth, design = dstrat)  probe_interaction(regmodel, pred = growth, modx = avg.ed, cond.int = TRUE,                   interval = TRUE,  jnplot = TRUE) ## JOHNSON-NEYMAN INTERVAL  ##  ## When avg.ed is OUTSIDE the interval [3.11, 5.78], the slope of ## growth is p < .05. ##  ## Note: The range of observed values of avg.ed is [1.38, 4.44] ## SIMPLE SLOPES ANALYSIS  ##  ## When avg.ed = 2.085002 (- 1 SD):  ##  ##                                 Est.    S.E.   t val.      p ## --------------------------- -------- ------- -------- ------ ## Slope of growth                 1.05    0.19     5.66   0.00 ## Conditional intercept         521.23   11.20    46.54   0.00 ##  ## When avg.ed = 2.787381 (Mean):  ##  ##                                 Est.   S.E.   t val.      p ## --------------------------- -------- ------ -------- ------ ## Slope of growth                 0.58   0.15     3.80   0.00 ## Conditional intercept         639.78   6.80    94.09   0.00 ##  ## When avg.ed = 3.489761 (+ 1 SD):  ##  ##                                 Est.   S.E.   t val.      p ## --------------------------- -------- ------ -------- ------ ## Slope of growth                 0.11   0.25     0.43   0.67 ## Conditional intercept         758.34   6.85   110.66   0.00 out <- probe_interaction(regmodel, pred = growth, modx = avg.ed,                          cond.int = TRUE, interval = TRUE, jnplot = TRUE) names(out) ## [1] \"simslopes\"    \"interactplot\""},{"path":"/articles/interactions.html","id":"way-interactions","dir":"Articles","previous_headings":"","what":"3-way interactions","title":"Exploring interactions with continuous predictors in regression models","text":"2-way interactions can hard grasp looking regular regression output, 3-way interactions outright inscrutable. aforementioned functions also support 3-way interactions, however. Plotting effects particularly helpful. Note Johnson-Neyman intervals still provided, insofar get intervals chosen levels second moderator. go distinctiveness J-N technique, 2-way interactions way avoid choose points moderator check whether predictor significant slope.  can change labels plot via mod2.labels argument. don’t forget can use theme_apa format publications just make economical use space.  can get Johnson-Neyman plots 3-way interactions well, keep mind mentioned earlier section J-N technique 3-way interactions. also need cowplot package, used backend mush together separate J-N plots.  Notice one three values second moderator, Johnson-Neyman interval values wasn’t plotted. levels second moderator want plot, likely resulting plot unwieldy hard read. can resize window help, though. can also use plot as_huxtable methods 3-way sim_slopes objects.","code":"fita3 <- lm(rating ~ privileges * critical * learning, data = attitude) probe_interaction(fita3, pred = critical, modx = learning, mod2 = privileges,                   alpha = .1) ## █████████████ While privileges (2nd moderator) = 40.89790 (- 1 SD) █████████████  ##  ## JOHNSON-NEYMAN INTERVAL  ##  ## When learning is INSIDE the interval [49.48, 161.86], the slope of ## critical is p < .1. ##  ## Note: The range of observed values of learning is [34.00, 75.00] ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of critical when learning = 44.62965 (- 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.24   0.24     1.02   0.32 ##  ## Slope of critical when learning = 56.36667 (Mean):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.68   0.33     2.05   0.05 ##  ## Slope of critical when learning = 68.10368 (+ 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   1.11   0.55     2.01   0.06 ##  ## ██████████████ While privileges (2nd moderator) = 53.13333 (Mean) ██████████████  ##  ## JOHNSON-NEYMAN INTERVAL  ##  ## The Johnson-Neyman interval could not be found. Is the p value for your ## interaction term below the specified alpha? ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of critical when learning = 44.62965 (- 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.09   0.34     0.27   0.79 ##  ## Slope of critical when learning = 56.36667 (Mean):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.06   0.24     0.24   0.81 ##  ## Slope of critical when learning = 68.10368 (+ 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.02   0.33     0.07   0.95 ##  ## █████████████ While privileges (2nd moderator) = 65.36876 (+ 1 SD) █████████████  ##  ## JOHNSON-NEYMAN INTERVAL  ##  ## The Johnson-Neyman interval could not be found. Is the p value for your ## interaction term below the specified alpha? ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of critical when learning = 44.62965 (- 1 SD):  ##  ##    Est.   S.E.   t val.      p ## ------- ------ -------- ------ ##   -0.06   0.61    -0.09   0.93 ##  ## Slope of critical when learning = 56.36667 (Mean):  ##  ##    Est.   S.E.   t val.      p ## ------- ------ -------- ------ ##   -0.56   0.50    -1.12   0.28 ##  ## Slope of critical when learning = 68.10368 (+ 1 SD):  ##  ##    Est.   S.E.   t val.      p ## ------- ------ -------- ------ ##   -1.06   0.66    -1.62   0.12 mtcars$cyl <- factor(mtcars$cyl,                      labels = c(\"4 cylinder\", \"6 cylinder\", \"8 cylinder\")) fitc3 <- lm(mpg ~ hp * wt * cyl, data = mtcars) interact_plot(fitc3, pred = hp, modx = wt, mod2 = cyl) +    theme_apa(legend.pos = \"bottomright\") regmodel3 <- svyglm(api00 ~ avg.ed * growth * enroll, design = dstrat) sim_slopes(regmodel3, pred = growth, modx = avg.ed, mod2 = enroll,           jnplot = TRUE) ## ███████████████ While enroll (2nd moderator) =  153.0518 (- 1 SD) ██████████████  ##  ## JOHNSON-NEYMAN INTERVAL  ##  ## When avg.ed is OUTSIDE the interval [2.75, 3.82], the slope of ## growth is p < .05. ##  ## Note: The range of observed values of avg.ed is [1.38, 4.44] ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of growth when avg.ed = 2.085002 (- 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   1.25   0.32     3.86   0.00 ##  ## Slope of growth when avg.ed = 2.787381 (Mean):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.39   0.22     1.75   0.08 ##  ## Slope of growth when avg.ed = 3.489761 (+ 1 SD):  ##  ##    Est.   S.E.   t val.      p ## ------- ------ -------- ------ ##   -0.48   0.35    -1.37   0.17 ##  ## ████████████████ While enroll (2nd moderator) =  595.2821 (Mean) ███████████████  ##  ## JOHNSON-NEYMAN INTERVAL  ##  ## When avg.ed is OUTSIDE the interval [2.84, 7.83], the slope of ## growth is p < .05. ##  ## Note: The range of observed values of avg.ed is [1.38, 4.44] ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of growth when avg.ed = 2.085002 (- 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.72   0.22     3.29   0.00 ##  ## Slope of growth when avg.ed = 2.787381 (Mean):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.34   0.16     2.16   0.03 ##  ## Slope of growth when avg.ed = 3.489761 (+ 1 SD):  ##  ##    Est.   S.E.   t val.      p ## ------- ------ -------- ------ ##   -0.04   0.24    -0.16   0.87 ##  ## ███████████████ While enroll (2nd moderator) = 1037.5125 (+ 1 SD) ██████████████  ##  ## JOHNSON-NEYMAN INTERVAL  ##  ## The Johnson-Neyman interval could not be found. Is the p value for your ## interaction term below the specified alpha? ##  ## SIMPLE SLOPES ANALYSIS  ##  ## Slope of growth when avg.ed = 2.085002 (- 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.18   0.31     0.58   0.56 ##  ## Slope of growth when avg.ed = 2.787381 (Mean):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.29   0.20     1.49   0.14 ##  ## Slope of growth when avg.ed = 3.489761 (+ 1 SD):  ##  ##   Est.   S.E.   t val.      p ## ------ ------ -------- ------ ##   0.40   0.27     1.49   0.14 ss3 <- sim_slopes(regmodel3, pred = growth, modx = avg.ed, mod2 = enroll) plot(ss3) as_huxtable(ss3)"},{"path":"/articles/interactions.html","id":"generalized-linear-models-mixed-models-et-al-","dir":"Articles","previous_headings":"","what":"Generalized linear models, mixed models, et al.","title":"Exploring interactions with continuous predictors in regression models","text":"interact_plot designed general possible tested glm, svyglm, merMod, rq models. dealing generalized linear models, can immensely useful get look predicted values response scale (e.g., probability scale logit models). give example plot might look, ’ll generate example data. ’s summary output, reference: Now let’s plot logit model’s interaction:  beautiful transverse interaction familiar logistic curve.","code":"set.seed(5) x <- rnorm(100) m <- rnorm(100) prob <- binomial(link = \"logit\")$linkinv(.25 + .3*x + .3*m + -.5*(x*m) + rnorm(100)) y <- rep(0, 100) y[prob >= .5] <- 1 logit_fit <- glm(y ~ x * m, family = binomial) summ(logit_fit) ## MODEL INFO: ## Observations: 100 ## Dependent Variable: y ## Type: Generalized linear model ##   Family: binomial  ##   Link function: logit  ##  ## MODEL FIT: ## χ²(3) = 33.99, p = 0.00 ## Pseudo-R² (Cragg-Uhler) = 0.39 ## Pseudo-R² (McFadden) = 0.25 ## AIC = 109.38, BIC = 119.81  ##  ## Standard errors: MLE ## ------------------------------------------------ ##                      Est.   S.E.   z val.      p ## ----------------- ------- ------ -------- ------ ## (Intercept)          0.58   0.25     2.27   0.02 ## x                    0.54   0.32     1.67   0.10 ## m                    0.86   0.33     2.62   0.01 ## x:m                 -1.73   0.46    -3.79   0.00 ## ------------------------------------------------ interact_plot(logit_fit, pred = x, modx = m)"},{"path":"/articles/interactions.html","id":"references","dir":"Articles","previous_headings":"Generalized linear models, mixed models, et al.","what":"References","title":"Exploring interactions with continuous predictors in regression models","text":"Bauer, D. J., & Curran, P. J. (2005). Probing interactions fixed multilevel regression: Inferential graphical techniques. Multivariate Behavioral Research, 40, 373–400. Esarey, J., & Sumner, J. L. (2017). Marginal effects interaction models: Determining controlling false positive rate. Comparative Political Studies, 1–33. https://doi.org/10.1177/0010414017730080 Fox, J., & Weisberg, S. (2018). Visualizing fit lack fit complex regression models predictor effect plots partial residuals. Journal Statistical Software, 87, 1–27. https://doi.org/10.18637/jss.v087.i09 Hainmueller, J., Mummolo, J., & Xu, Y. (2017). much trust estimates multiplicative interaction models? Simple tools improve empirical practice. SSRN Electronic Journal. https://doi.org/10.2139/ssrn.2739221 Johnson, P. O., & Fay, L. C. (1950). Johnson-Neyman technique, theory application. Psychometrika, 15, 349–367.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jacob . Long. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Long JA (2022). interactions: Comprehensive, User-Friendly Toolkit Probing Interactions. R package version 1.1.6, https://cran.r-project.org/package=interactions.","code":"@Manual{interactions,   title = {interactions: Comprehensive, User-Friendly Toolkit for Probing Interactions},   author = {Jacob A. Long},   year = {2022},   note = {R package version 1.1.6},   url = {https://cran.r-project.org/package=interactions}, }"},{"path":"/index.html","id":"interactions-","dir":"","previous_headings":"","what":"Comprehensive, User-Friendly Toolkit for Probing Interactions","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"package consists number tools analysis interpretation statistical interactions regression models. features, especially pertain visualization, highly labor-intensive oneself tedious error-prone done “hand.” Quick rundown features: simple slopes analysis calculation Johnson-Neyman intervals visualization predicted observed values using ggplot2 implemented consistent interface designed simple possible tweaks guts available advanced users. GLMs, models survey package, multilevel models lme4 fully supported visualization Bayesian models rstanaram brms. Several model types work “box” even though officially supported.","code":""},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"package available via CRAN.","code":"install.packages(\"interactions\")"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"Unless keen eye good familiarity underlying mathematics scale variables, can difficult look output regression model includes interaction completely understand model telling . package contains several means aiding understanding statistical inference interactions.","code":""},{"path":"/index.html","id":"johnson-neyman-intervals-and-simple-slopes-analysis","dir":"","previous_headings":"Usage","what":"Johnson-Neyman intervals and simple slopes analysis","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"“classic” way probing interaction effect calculate slope focal predictor different values moderator. moderator categorical, especially informative—e.g., slope cats vs. dogs? can also arbitrarily choose points continuous moderators. said, statistically rigorous way explore effects find Johnson-Neyman interval, tells range values moderator slope predictor significant vs.  nonsignificant specified alpha level. sim_slopes function default find Johnson-Neyman interval tell predictor’s slope specified values moderator; default either values binary predictors mean mean +/- one standard deviation continuous moderators.  Johnson-Neyman plot can help get handle interval telling , . Note can look Johnson-Neyman interval directly johnson_neyman() function. generalize three-way interactions, , although Johnson-Neyman intervals handle second moderator way first.","code":"library(interactions) fiti <- lm(mpg ~ hp * wt, data = mtcars) sim_slopes(fiti, pred = hp, modx = wt, jnplot = TRUE) #> JOHNSON-NEYMAN INTERVAL  #>  #> When wt is OUTSIDE the interval [3.69, 5.90], the slope of hp is p < .05. #>  #> Note: The range of observed values of wt is [1.51, 5.42] #> SIMPLE SLOPES ANALYSIS  #>  #> Slope of hp when wt = 2.238793 (- 1 SD):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.06   0.01    -5.66   0.00 #>  #> Slope of hp when wt = 3.217250 (Mean):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.03   0.01    -4.07   0.00 #>  #> Slope of hp when wt = 4.195707 (+ 1 SD):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.00   0.01    -0.31   0.76"},{"path":"/index.html","id":"visualizing-interaction-effects","dir":"","previous_headings":"Usage","what":"Visualizing interaction effects","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"function plots two- three-way interactions using ggplot2 similar interface aforementioned sim_slopes function. Users can customize appearance familiar ggplot2 commands. supports several customizations, like confidence intervals.  can also plot observed data comparison:  function also supports categorical moderators—plotting observed data cases can reveal striking patterns.  may also combine plotting simple slopes functions using probe_interaction, calls functions simultaneously. Categorical categorical interactions can investigated using cat_plot() function.","code":"interact_plot(fiti, pred = hp, modx = wt, interval = TRUE) interact_plot(fiti, pred = hp, modx = wt, plot.points = TRUE) fitiris <- lm(Petal.Length ~ Petal.Width * Species, data = iris) interact_plot(fitiris, pred = Petal.Width, modx = Species, plot.points = TRUE)"},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"’m happy receive bug reports, suggestions, questions, () contributions fix problems add features. prefer use Github issues system trying reach ways. Pull requests contributions encouraged. Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Comprehensive, User-Friendly Toolkit for Probing Interactions","text":"source code package licensed MIT License.","code":""},{"path":"/reference/as_huxtable.sim_margins.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tabular output for simple margins analysis — as_huxtable.sim_margins","title":"Create tabular output for simple margins analysis — as_huxtable.sim_margins","text":"function converts sim_margins object huxtable object, making suitable use external documents.","code":""},{"path":"/reference/as_huxtable.sim_margins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tabular output for simple margins analysis — as_huxtable.sim_margins","text":"","code":"as_huxtable.sim_margins(   x,   format = \"{estimate} ({std.error})\",   sig.levels = c(`***` = 0.001, `**` = 0.01, `*` = 0.05, `#` = 0.1),   digits = getOption(\"jtools-digits\", 2),   conf.level = 0.95,   intercept = attr(x, \"cond.int\"),   int.format = format,   ... )"},{"path":"/reference/as_huxtable.sim_margins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create tabular output for simple margins analysis — as_huxtable.sim_margins","text":"x sim_margins object. format method sharing slope associated uncertainty. Default \"{estimate} ({std.error})\". See instructions error_format argument export_summs() options. sig.levels named vector values potential p value thresholds names significance markers (e.g., \"*\") p values threshold. Default c(`***` = .001, `**` = .01, `*` = .05, `#` = .1). digits many digits outputted table round ? Default 2. conf.level wide confidence interval , used. .95 (95% interval) default. intercept conditional intercepts included? Default whatever cond.int argument x . int.format conditional intercepts requested, formatted? Default format. ... Ignored.","code":""},{"path":"/reference/as_huxtable.sim_margins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create tabular output for simple margins analysis — as_huxtable.sim_margins","text":"can huxtable, see huxtable.","code":""},{"path":"/reference/as_huxtable.sim_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Create tabular output for simple slopes analysis — as_huxtable.sim_slopes","title":"Create tabular output for simple slopes analysis — as_huxtable.sim_slopes","text":"function converts sim_slopes object huxtable object, making suitable use external documents.","code":""},{"path":"/reference/as_huxtable.sim_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create tabular output for simple slopes analysis — as_huxtable.sim_slopes","text":"","code":"as_huxtable.sim_slopes(   x,   format = \"{estimate} ({std.error})\",   sig.levels = c(`***` = 0.001, `**` = 0.01, `*` = 0.05, `#` = 0.1),   digits = getOption(\"jtools-digits\", 2),   conf.level = 0.95,   intercept = attr(x, \"cond.int\"),   int.format = format,   ... )"},{"path":"/reference/as_huxtable.sim_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create tabular output for simple slopes analysis — as_huxtable.sim_slopes","text":"x sim_slopes() object. format method sharing slope associated uncertainty. Default \"{estimate} ({std.error})\". See instructions error_format argument export_summs() options. sig.levels named vector values potential p value thresholds names significance markers (e.g., \"*\") p values threshold. Default c(`***` = .001, `**` = .01, `*` = .05, `#` = .1). digits many digits outputted table round ? Default 2. conf.level wide confidence interval , used. .95 (95% interval) default. intercept conditional intercepts included? Default whatever cond.int argument x . int.format conditional intercepts requested, formatted? Default format. ... Ignored.","code":""},{"path":"/reference/as_huxtable.sim_slopes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create tabular output for simple slopes analysis — as_huxtable.sim_slopes","text":"can huxtable, see huxtable.","code":""},{"path":"/reference/cat_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot interaction effects between categorical predictors. — cat_plot","title":"Plot interaction effects between categorical predictors. — cat_plot","text":"cat_plot complementary function interact_plot() designed plotting interactions predictor moderator(s) categorical (, R terms, factors).","code":""},{"path":"/reference/cat_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot interaction effects between categorical predictors. — cat_plot","text":"","code":"cat_plot(   model,   pred,   modx = NULL,   mod2 = NULL,   data = NULL,   geom = c(\"point\", \"line\", \"bar\"),   pred.values = NULL,   modx.values = NULL,   mod2.values = NULL,   interval = TRUE,   plot.points = FALSE,   point.shape = FALSE,   vary.lty = FALSE,   centered = \"all\",   int.type = c(\"confidence\", \"prediction\"),   int.width = 0.95,   line.thickness = 1.1,   point.size = 1.5,   pred.point.size = 3.5,   jitter = 0.1,   geom.alpha = NULL,   dodge.width = NULL,   errorbar.width = NULL,   interval.geom = c(\"errorbar\", \"linerange\"),   outcome.scale = \"response\",   robust = FALSE,   cluster = NULL,   vcov = NULL,   pred.labels = NULL,   modx.labels = NULL,   mod2.labels = NULL,   set.offset = 1,   x.label = NULL,   y.label = NULL,   main.title = NULL,   legend.main = NULL,   colors = NULL,   partial.residuals = FALSE,   point.alpha = 0.6,   color.class = NULL,   at = NULL,   ... )"},{"path":"/reference/cat_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot interaction effects between categorical predictors. — cat_plot","text":"model regression model. function tested lm, glm, svyglm, merMod, rq, brmsfit, stanreg models. Models classes may work well officially supported. model include interaction interest. pred categorical predictor variable appear x-axis. Note evaluated using rlang, programmers can use !! syntax pass variables instead verbatim names. modx categorical moderator variable. mod2 three-way interactions, second categorical moderator. data Optional, default NULL. may provide data used fit model. can better way get mean values centering can crucial models variable transformations formula (e.g., log(x)) polynomial terms (e.g., poly(x, 2)). see warning function detects problems likely solved providing data argument function attempt retrieve original data global environment. geom type plot ? several options since best way visualize categorical interactions varies context. options: \"point\": default. Simply plot point estimates. may want use point.shape = TRUE also consider interval = TRUE visualize uncertainty. \"line\": connects observations across levels pred variable line. good option pred variable ordinal (ordered). may still consider point.shape = TRUE interval = TRUE still good idea. \"bar\": bar chart. call \"dynamite plot.\" Many applied researchers advise type plot represent distribution observed data uncertainty predictions well. best least use interval = TRUE argument geom. pred.values values predictor included plot? default, levels included. modx.values values moderator lines plotted? two basic options: vector values (e.g., c(1, 2, 3)) single argument asking calculate set values. See details . Default NULL. NULL (mean-plus-minus), customary +/- 1 standard deviation mean well mean used continuous moderators. \"plus-minus\", plots lines moderator +/- 1 standard deviation without mean. may also choose \"terciles\" split data equally-sized groups choose point mean groups. moderator factor variable modx.values NULL, level factor included. may specify subset factor levels (e.g., c(\"Level 1\", \"Level 3\")) long 1. levels plotted order provide , can used reorder levels well. mod2.values values second moderator plot facetted ? , separate plot level moderator. Defaults modx.values. interval Logical. TRUE, plots confidence/prediction intervals. plot.points Logical. TRUE, plots actual data points scatterplot top interaction lines. Note geom = \"bar\", cause bars become transparent can see points. point.shape plotted points—either observed data predicted values \"point\" \"line\" geoms—shape points vary values factor? especially useful aim black white printing- colorblind-friendly. vary.lty resulting plot different shapes line addition colors? Defaults TRUE. centered vector quoted variable names mean-centered. \"\", non-focal predictors centered. may instead pass character vector variables center. User can also use \"none\" base predictions variables set 0. response variable, pred, modx, mod2 variables never centered. int.type Type interval plot. Options \"confidence\" \"prediction\". Default confidence interval. int.width large interval , relative standard error? default, .95, corresponds roughly 1.96 standard errors .05 alpha level values outside range. words, confidence interval, .95 analogous 95% confidence interval. line.thickness thick plotted lines ? Default 1. point.size size used observed data plot.points TRUE? Default 1.5. pred.point.size TRUE geom \"point\" \"line\", sets size predicted points. Default 3.5. Note distinction point.size, refers observed data points. jitter much plot.points observed values \"jittered\" via ggplot2::position_jitter()? many points near , jittering moves small amount keep totally overlapping. cases, though, can add confusion since may make points appear outside boundaries observed values cause visual issues. Default 0.1, increase needed points overlapping much set 0 jitter. argument vector two values, first assumed jitter width second height. geom.alpha alpha aesthetic plotted lines/bars? Default NULL, means set depending value geom plot.points. dodge.width width argument ggplot2::position_dodge() ? Default NULL, means set depending value geom. errorbar.width wide error bars ? Default NULL, meaning set depending value geom. Ignored interval FALSE. interval.geom categorical categorical interactions. One \"errorbar\" \"linerange\". former, ggplot2::geom_errorbar() used. latter, ggplot2::geom_linerange() used. outcome.scale nonlinear models (.e., GLMs), outcome variable plotted link scale (e.g., log odds logit models) original scale (e.g., predicted probabilities logit models)? default \"response\", original scale. link scale, show straight lines rather curves, use \"link\". robust robust standard errors used find confidence intervals supported models? Default FALSE, specify type sandwich standard errors like use (.e., \"HC0\", \"HC1\", ). TRUE, defaults \"HC3\" standard errors. cluster clustered standard errors, provide column name cluster variable input data frame (string). Alternately, provide vector clusters. vcov Optional. may supply variance-covariance matrix coefficients . useful using method robust standard error calculation supported sandwich package. pred.labels character vector equal length number factor levels predictor (number specified predvals). NULL, default, factor labels used. modx.labels character vector labels level moderator values, provided order modx.values argument. NULL, values used labels unless modx,values also NULL. case, \"+1 SD\" \"-1 SD\" used. mod2.labels character vector labels level 2nd moderator values, provided order mod2.values argument. NULL, values used labels unless mod2.values also NULL. case, \"+1 SD\" \"-1 SD\" used. set.offset models offset (e.g., Poisson models), sets offset predicted values. predicted values offset. default, set 1, makes predicted values proportion. See details offset support. x.label character object specifying desired x-axis label. NULL, variable name used. y.label character object specifying desired x-axis label. NULL, variable name used. main.title character object used overall title plot. NULL, main title used. legend.main character object used title appears legend. NULL, name moderating variable used. colors palette argument accepted jtools::get_colors(). Default \"CUD Bright\" factor moderators \"blue\" continuous moderators. may also simply supply vector colors accepted ggplot2 equal length number moderator levels. partial.residuals Instead plotting observed data, may plot partial residuals (controlling effects variables besides pred). point.alpha alpha aesthetic plotted points observed data ? Default 0.6, can range 0 (transparent) 1 (opaque). color.class Deprecated. Now known colors. want manually set values variables model, providing named list names variables list values vectors values. can useful especially exploring interactions conditional predictions. ... extra arguments passed make_predictions","code":""},{"path":"/reference/cat_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot interaction effects between categorical predictors. — cat_plot","text":"functions returns ggplot object, can treated like user-created plot expanded upon .","code":""},{"path":"/reference/cat_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot interaction effects between categorical predictors. — cat_plot","text":"function provides means plotting conditional effects purpose exploring interactions context regression. must package ggplot2 installed benefit plotting functions. function designed two three-way interactions. additional terms, effects package may better suited task. function supports nonlinear generalized linear models default plot original scale (outcome.scale = \"response\"). mixed effects models lme4 supported, fixed effects plotted. lme4 provide confidence intervals, supported function either. Note: use transformed predictors, e.g., log(variable), provide variable name pred, modx, mod2 supply original data separately data argument. Info offsets: Offsets partially supported function important limitations. First , single offset per model supported. Second, best general specify offsets offset argument model fitting function rather formula. much likely success provide data used fit model data argument.","code":""},{"path":"/reference/cat_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot interaction effects between categorical predictors. — cat_plot","text":"","code":"library(ggplot2) fit <- lm(price ~ cut * color, data = diamonds) cat_plot(fit, pred = color, modx = cut, interval = TRUE)   # 3-way interaction  ## Will first create a couple dichotomous factors to ensure full rank mpg2 <- mpg mpg2$auto <- \"auto\" mpg2$auto[mpg2$trans %in% c(\"manual(m5)\", \"manual(m6)\")] <- \"manual\" mpg2$auto <- factor(mpg2$auto) mpg2$fwd <- \"2wd\" mpg2$fwd[mpg2$drv == \"4\"] <- \"4wd\" mpg2$fwd <- factor(mpg2$fwd) ## Drop the two cars with 5 cylinders (rest are 4, 6, or 8) mpg2 <- mpg2[mpg2$cyl != \"5\",] mpg2$cyl <- factor(mpg2$cyl) ## Fit the model fit3 <- lm(cty ~ cyl * fwd * auto, data = mpg2)  # The line geom looks good for an ordered factor predictor cat_plot(fit3, pred = cyl, modx = fwd, mod2 = auto, geom = \"line\",  interval = TRUE)"},{"path":"/reference/interact_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot interaction effects in regression models — interact_plot","title":"Plot interaction effects in regression models — interact_plot","text":"interact_plot plots regression lines user-specified levels moderator variable explore interactions. plotting done ggplot2 rather base graphics, similar functions use.","code":""},{"path":"/reference/interact_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot interaction effects in regression models — interact_plot","text":"","code":"interact_plot(   model,   pred,   modx,   modx.values = NULL,   mod2 = NULL,   mod2.values = NULL,   centered = \"all\",   data = NULL,   at = NULL,   plot.points = FALSE,   interval = FALSE,   int.type = c(\"confidence\", \"prediction\"),   int.width = 0.95,   outcome.scale = \"response\",   linearity.check = FALSE,   facet.modx = FALSE,   robust = FALSE,   cluster = NULL,   vcov = NULL,   set.offset = 1,   x.label = NULL,   y.label = NULL,   pred.labels = NULL,   modx.labels = NULL,   mod2.labels = NULL,   main.title = NULL,   legend.main = NULL,   colors = NULL,   line.thickness = 1,   vary.lty = TRUE,   point.size = 1.5,   point.shape = FALSE,   jitter = 0,   rug = FALSE,   rug.sides = \"b\",   partial.residuals = FALSE,   point.alpha = 0.6,   color.class = NULL,   ... )"},{"path":"/reference/interact_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot interaction effects in regression models — interact_plot","text":"model regression model. function tested lm, glm, svyglm, merMod, rq, brmsfit, stanreg models. Models classes may work well officially supported. model include interaction interest. pred name predictor variable involved interaction. can bare name string. Note evaluated using rlang, programmers can use !! syntax pass variables instead verbatim names. modx name moderator variable involved interaction. can bare name string. rlang proviso applies pred. modx.values values moderator lines plotted? two basic options: vector values (e.g., c(1, 2, 3)) single argument asking calculate set values. See details . Default NULL. NULL (mean-plus-minus), customary +/- 1 standard deviation mean well mean used continuous moderators. \"plus-minus\", plots lines moderator +/- 1 standard deviation without mean. may also choose \"terciles\" split data equally-sized groups choose point mean groups. moderator factor variable modx.values NULL, level factor included. may specify subset factor levels (e.g., c(\"Level 1\", \"Level 3\")) long 1. levels plotted order provide , can used reorder levels well. mod2 Optional. name second moderator variable involved interaction. can bare name string. rlang proviso applies pred. mod2.values values second moderator plot facetted ? , separate plot level moderator. Defaults modx.values. centered vector quoted variable names mean-centered. \"\", non-focal predictors centered. may instead pass character vector variables center. User can also use \"none\" base predictions variables set 0. response variable, pred, modx, mod2 variables never centered. data Optional, default NULL. may provide data used fit model. can better way get mean values centering can crucial models variable transformations formula (e.g., log(x)) polynomial terms (e.g., poly(x, 2)). see warning function detects problems likely solved providing data argument function attempt retrieve original data global environment. want manually set values variables model, providing named list names variables list values vectors values. can useful especially exploring interactions conditional predictions. plot.points Logical. TRUE, plots actual data points scatterplot top interaction lines. color dots based moderator value. interval Logical. TRUE, plots confidence/prediction intervals around line using geom_ribbon. int.type Type interval plot. Options \"confidence\" \"prediction\". Default confidence interval. int.width large interval , relative standard error? default, .95, corresponds roughly 1.96 standard errors .05 alpha level values outside range. words, confidence interval, .95 analogous 95% confidence interval. outcome.scale nonlinear models (.e., GLMs), outcome variable plotted link scale (e.g., log odds logit models) original scale (e.g., predicted probabilities logit models)? default \"response\", original scale. link scale, show straight lines rather curves, use \"link\". linearity.check two-way interactions . TRUE, plots pane level moderator superimposes loess smoothed line (gray) plot. enables see effect linear span moderator. See Hainmueller et al. (2016) references details intuition behind . recommended also set plot.points = TRUE use modx.values = \"terciles\" option. facet.modx Create separate panels level moderator? Default FALSE, except linearity.check TRUE. robust robust standard errors used find confidence intervals supported models? Default FALSE, specify type sandwich standard errors like use (.e., \"HC0\", \"HC1\", ). TRUE, defaults \"HC3\" standard errors. cluster clustered standard errors, provide column name cluster variable input data frame (string). Alternately, provide vector clusters. vcov Optional. may supply variance-covariance matrix coefficients . useful using method robust standard error calculation supported sandwich package. set.offset models offset (e.g., Poisson models), sets offset predicted values. predicted values offset. default, set 1, makes predicted values proportion. See details offset support. x.label character object specifying desired x-axis label. NULL, variable name used. y.label character object specifying desired x-axis label. NULL, variable name used. pred.labels character vector 2 labels predictor 2-level factor continuous variable 2 values. NULL, default, factor labels used. modx.labels character vector labels level moderator values, provided order modx.values argument. NULL, values used labels unless modx,values also NULL. case, \"+1 SD\" \"-1 SD\" used. mod2.labels character vector labels level 2nd moderator values, provided order mod2.values argument. NULL, values used labels unless mod2.values also NULL. case, \"+1 SD\" \"-1 SD\" used. main.title character object used overall title plot. NULL, main title used. legend.main character object used title appears legend. NULL, name moderating variable used. colors See jtools_colors details types arguments accepted. Default \"CUD Bright\" factor moderators, \"Blues\" +/- SD user-specified modx.values values. line.thickness thick plotted lines ? Default 1. vary.lty resulting plot different shapes line addition colors? Defaults TRUE. point.size size used observed data plot.points TRUE? Default 1.5. point.shape plotted points—either observed data predicted values \"point\" \"line\" geoms—shape points vary values factor? especially useful aim black white printing- colorblind-friendly. jitter much plot.points observed values \"jittered\" via ggplot2::position_jitter()? many points near , jittering moves small amount keep totally overlapping. cases, though, can add confusion since may make points appear outside boundaries observed values cause visual issues. Default 0, try various small values (e.g., 0.1) increase needed points overlapping much. argument vector two values, first assumed jitter width second height. rug Show rug plot margins? uses ggplot2::geom_rug() show distribution predictor (top/bottom) /response variable (left/right) original data. Default FALSE. rug.sides sides rug plots appear? Default \"b\", meaning bottom. \"t\" /\"b\" show distribution predictor \"l\" /\"r\" show distribution response. \"bl\" good option show predictor response. partial.residuals Instead plotting observed data, may plot partial residuals (controlling effects variables besides pred). point.alpha alpha aesthetic plotted points observed data ? Default 0.6, can range 0 (transparent) 1 (opaque). color.class Deprecated. Now known colors. ... extra arguments passed make_predictions","code":""},{"path":"/reference/interact_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot interaction effects in regression models — interact_plot","text":"functions returns ggplot object, can treated like user-created plot expanded upon .","code":""},{"path":"/reference/interact_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot interaction effects in regression models — interact_plot","text":"function provides means plotting conditional effects purpose exploring interactions regression models. function designed two three-way interactions. additional terms, effects package may better suited task. function supports nonlinear generalized linear models default plot original scale (outcome.scale = \"response\"). plot linear scale, use \"link\" outcome.scale. mixed effects models lme4 supported, fixed effects plotted. lme4 provide confidence intervals, supported function either. Note: use transformed predictors, e.g., log(variable), put name quotes backticks argument. Details observed data split multi-pane plots: set plot.points = TRUE request multi-pane (facetted) plot either second moderator, linearity.check = TRUE, facet.modx = TRUE, observed data split many groups  panes plotted separately. moderator factor, way happens intuitive since obvious values go pane. rest section address case continuous moderators. recommendation use modx.values = \"terciles\" mod2.values = \"terciles\" want plot observed data multi-pane plots. , data split three approximately equal-sized groups lowest third, middle third, highest third data split accordingly. can replicate procedure using Hmisc::cut2() g = 3 Hmisc package. Sometimes, groups equal size number observations divisible 3 /multiple observations value one cut points. Otherwise, ad hoc procedure used split data. Quantiles found mod2.values modx.values value. quantiles used split data, however, since want plotted lines represent slope typical value group. next step, , take mean pair neighboring quantiles use cut points. example, mod2.values 25th, 50th, 75th percentiles distribution moderator, data split 37.5th 62.5th percentiles. variable normally distributed, correspond fairly closely using terciles. Info offsets: Offsets partially supported function important limitations. First , single offset per model supported. Second, best general specify offsets offset argument model fitting function rather formula. much likely success provide data used fit model data argument.","code":""},{"path":"/reference/interact_plot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot interaction effects in regression models — interact_plot","text":"Bauer, D. J., & Curran, P. J. (2005). Probing interactions fixed multilevel regression: Inferential graphical techniques. Multivariate Behavioral Research, 40(3), 373-400. doi:10.1207/s15327906mbr4003_5 Cohen, J., Cohen, P., West, S. G., & Aiken, L. S. (2003). Applied multiple regression/correlation analyses behavioral sciences (3rd ed.). Mahwah, NJ: Lawrence Erlbaum Associates, Inc. Hainmueller, J., Mummolo, J., & Xu, Y. (2016). much trust estimates multiplicative interaction models? Simple tools improve empirical practice. SSRN Electronic Journal. doi:10.2139/ssrn.2739221","code":""},{"path":[]},{"path":"/reference/interact_plot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot interaction effects in regression models — interact_plot","text":"Jacob Long jacob.long@sc.edu","code":""},{"path":"/reference/interact_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot interaction effects in regression models — interact_plot","text":"","code":"# Using a fitted lm model states <- as.data.frame(state.x77) states$HSGrad <- states$`HS Grad` fit <- lm(Income ~ HSGrad + Murder * Illiteracy, data = states) interact_plot(model = fit, pred = Murder, modx = Illiteracy)   # Using interval feature fit <- lm(accel ~ mag * dist, data = attenu) interact_plot(fit, pred = mag, modx = dist, interval = TRUE,   int.type = \"confidence\", int.width = .8) #> Warning: -16.5667658200318 is outside the observed range of dist   # Using second moderator fit <- lm(Income ~ HSGrad * Murder * Illiteracy, data = states) interact_plot(model = fit, pred = Murder, modx = Illiteracy, mod2 = HSGrad)   # With svyglm if (requireNamespace(\"survey\")) { library(survey) data(api) dstrat <- svydesign(id = ~1, strata = ~stype, weights = ~pw,                     data = apistrat, fpc = ~fpc) regmodel <- svyglm(api00 ~ ell * meals, design = dstrat) interact_plot(regmodel, pred = ell, modx = meals) } #> Loading required package: grid #> Loading required package: Matrix #> Loading required package: survival #>  #> Attaching package: ‘survey’ #> The following object is masked from ‘package:graphics’: #>  #>     dotchart   # With lme4 if (FALSE) { # \\dontrun{ library(lme4) data(VerbAgg) mv <- glmer(r2 ~ Anger * mode + (1 | item), data = VerbAgg,             family = binomial,             control = glmerControl(\"bobyqa\")) interact_plot(mv, pred = Anger, modx = mode) } # }"},{"path":"/reference/johnson_neyman.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"johnson_neyman finds -called \"Johnson-Neyman\" intervals understanding simple slopes significant context interactions multiple linear regression.","code":""},{"path":"/reference/johnson_neyman.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"","code":"johnson_neyman(   model,   pred,   modx,   vmat = NULL,   alpha = 0.05,   plot = TRUE,   control.fdr = FALSE,   line.thickness = 0.5,   df = \"residual\",   digits = getOption(\"jtools-digits\", 2),   critical.t = NULL,   sig.color = \"#00BFC4\",   insig.color = \"#F8766D\",   mod.range = NULL,   title = \"Johnson-Neyman plot\",   y.label = NULL,   modx.label = NULL )"},{"path":"/reference/johnson_neyman.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"model regression model. tested lm, glm, svyglm objects, others may work well. contain interaction interest. aware just computations work, necessarily mean procedure appropriate type model . pred predictor variable involved interaction. modx moderator variable involved interaction. vmat Optional. may supply variance-covariance matrix coefficients . useful using robust standard errors, using sandwich package. alpha alpha level. default, standard 0.05. plot plot results printed? Default TRUE. ggplot2 object returned either way. control.fdr Logical. Use procedure described Esarey & Sumner (2017) limit false discovery rate? Default FALSE. See details method. line.thickness thick predicted line ? passed geom_path size argument, way line created, use geom_path modify output plot . df degrees freedom calculated critical test statistic? Previous versions used large sample approximation; alpha .05, critical test statistic 1.96 regardless sample size model complexity. default now \"residual\", meaning degrees freedom used calculate p values regression coefficients. may instead choose number \"normal\", reverts previous behavior. argument used control.fdr = TRUE. digits integer specifying number digits past decimal report output. Default 2. can change default number digits jtools functions options(\"jtools-digits\" = digits) digits desired number. critical.t want provide critical test statistic instead relying normal t approximation, control.fdr calculation, can give value . allows use methods calculating . sig.color Sets color areas Johnson-Neyman plot slope moderator significant specified level. \"black\" can good choice greyscale publishing. insig.color Sets color areas Johnson-Neyman plot slope moderator insignificant specified level. \"grey\" can good choice greyscale publishing. mod.range range values moderator (x-axis) plot. default, goes one standard deviation observed range one standard deviation observed range observed range highlighted plot. instead choose provide actual observed minimum maximum, case range observed data highlighted plot. Provide range vector, e.g., c(0, 10). title plot title. \"Johnson-Neyman plot\" default. y.label prefer override automatic labelling y axis, can specify label . y axis represents slope recommended simply give name predictor variable instead make clear slope. default, \"Slope [pred]\" used (whatever pred ). modx.label prefer override automatic labelling x axis, can specify label . default, name modx used.","code":""},{"path":"/reference/johnson_neyman.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"bounds two numbers make interval. cbands dataframe predicted values predictor's slope lower/upper bounds confidence bands like make plots plot ggplot object used plotting. can tweak plot like ggplot.","code":""},{"path":"/reference/johnson_neyman.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"interpretation values given function important always immediately intuitive. interaction predictor variable moderator variable, often case slope predictor statistically significant values moderator. example, perhaps effect predictor significant moderator set high value. Johnson-Neyman interval provides two values moderator slope predictor goes non-significant significant. Usually, predictor's slope significant outside range given function. output function make clear either way. One weakness method probing interactions analogous making multiple comparisons without adjustment alpha level. Esarey & Sumner (2017) proposed method addressing , implemented interactionTest package. function implements procedure modifications interactionTest code (package required use function). set control.fdr = TRUE, alternative t statistic calculated based specified alpha level data. always conservative test control.fdr = FALSE. printed output report calculated critical t statistic. technique easily ported 3-way interaction contexts. , however, look J-N interval two different levels second moderator. forgo benefit J-N technique, pick arbitrary points. want , just use sim_slopes function's ability handle 3-way interactions request Johnson-Neyman intervals .","code":""},{"path":"/reference/johnson_neyman.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"Bauer, D. J., & Curran, P. J. (2005). Probing interactions fixed multilevel regression: Inferential graphical techniques. Multivariate Behavioral Research, 40(3), 373-400. doi:10.1207/s15327906mbr4003_5 Esarey, J., & Sumner, J. L. (2017). Marginal effects interaction models: Determining controlling false positive rate. Comparative Political Studies, 1–33. Advance online publication. doi:10.1177/0010414017730080 Johnson, P.O. & Fay, L.C. (1950). Johnson-Neyman technique, theory application. Psychometrika, 15, 349-367. doi:10.1007/BF02288864","code":""},{"path":[]},{"path":"/reference/johnson_neyman.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"Jacob Long jacob.long@sc.edu","code":""},{"path":"/reference/johnson_neyman.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate Johnson-Neyman intervals for 2-way interactions — johnson_neyman","text":"","code":"# Using a fitted lm model states <- as.data.frame(state.x77) states$HSGrad <- states$`HS Grad` fit <- lm(Income ~ HSGrad + Murder*Illiteracy,   data = states) johnson_neyman(model = fit, pred = Murder,   modx = Illiteracy) #> JOHNSON-NEYMAN INTERVAL  #>  #> When Illiteracy is OUTSIDE the interval [0.80, 2.67], the slope of #> Murder is p < .05. #>  #> Note: The range of observed values of Illiteracy is [0.50, 2.80] #>"},{"path":"/reference/plot.sim_margins.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coefficients from simple slopes analysis — plot.sim_margins","title":"Plot coefficients from simple slopes analysis — plot.sim_margins","text":"creates coefficient plot visually summarize results simple slopes analysis.","code":""},{"path":"/reference/plot.sim_margins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coefficients from simple slopes analysis — plot.sim_margins","text":"","code":"# S3 method for class 'sim_margins' plot(x, ...)"},{"path":"/reference/plot.sim_margins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coefficients from simple slopes analysis — plot.sim_margins","text":"x sim_margins() object. ... arguments passed jtools::plot_coefs()","code":""},{"path":"/reference/plot.sim_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot coefficients from simple slopes analysis — plot.sim_slopes","title":"Plot coefficients from simple slopes analysis — plot.sim_slopes","text":"creates coefficient plot visually summarize results simple slopes analysis.","code":""},{"path":"/reference/plot.sim_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot coefficients from simple slopes analysis — plot.sim_slopes","text":"","code":"# S3 method for class 'sim_slopes' plot(x, ...)"},{"path":"/reference/plot.sim_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot coefficients from simple slopes analysis — plot.sim_slopes","text":"x sim_slopes() object. ... arguments passed jtools::plot_coefs()","code":""},{"path":"/reference/probe_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Probe interaction effects via simple slopes and plotting — probe_interaction","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"probe_interaction convenience function allows users call sim_slopes interact_plot single call.","code":""},{"path":"/reference/probe_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"","code":"probe_interaction(model, pred, modx, mod2 = NULL, ...)"},{"path":"/reference/probe_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"model regression model. function tested lm, glm, svyglm, merMod, rq, brmsfit, stanreg models. Models classes may work well officially supported. model include interaction interest. pred name predictor variable involved interaction. can bare name string. Note evaluated using rlang, programmers can use !! syntax pass variables instead verbatim names. modx name moderator variable involved interaction. can bare name string. rlang proviso applies pred. mod2 Optional. name second moderator variable involved interaction. can bare name string. rlang proviso applies pred. ... arguments accepted sim_slopes interact_plot","code":""},{"path":"/reference/probe_interaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"simslopes sim_slopes object created. interactplot ggplot object created interact_plot.","code":""},{"path":"/reference/probe_interaction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"function simply merges nearly-equivalent arguments needed call sim_slopes interact_plot without need re-typing common arguments. Note function called separately re-fit separate model level moderator; therefore, runtime may considerably longer original model fit. larger models, worth keeping mind. Sometimes, may want different parameters simple slopes analysis compared plotting interaction effects. instance, often easier interpret regression output variables standardized; plots often easier understand variables original units measure. probe_interaction support providing different arguments function. needed, use sim_slopes interact_plot directly.","code":""},{"path":[]},{"path":"/reference/probe_interaction.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"Jacob Long jacob.long@sc.edu","code":""},{"path":"/reference/probe_interaction.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Probe interaction effects via simple slopes and plotting — probe_interaction","text":"","code":"# Using a fitted model as formula input fiti <- lm(Income ~ Frost + Murder * Illiteracy,   data=as.data.frame(state.x77)) probe_interaction(model = fiti, pred = Murder, modx = Illiteracy,                   modx.values = \"plus-minus\") #> Error in probe_interaction(model = fiti, pred = Murder, modx = Illiteracy,     modx.values = \"plus-minus\"): object 'fiti' not found # 3-way interaction fiti3 <- lm(Income ~ Frost * Murder * Illiteracy,   data=as.data.frame(state.x77)) probe_interaction(model = fiti3, pred = Murder, modx = Illiteracy,                   mod2 = Frost, mod2.values = \"plus-minus\") #> Error in probe_interaction(model = fiti3, pred = Murder, modx = Illiteracy,     mod2 = Frost, mod2.values = \"plus-minus\"): object 'fiti3' not found  # With svyglm if (requireNamespace(\"survey\")) { library(survey) data(api) dstrat <- svydesign(id = ~1, strata = ~stype, weights = ~pw,                     data = apistrat, fpc = ~fpc) regmodel <- svyglm(api00 ~ ell * meals + sch.wide, design = dstrat) probe_interaction(model = regmodel, pred = ell, modx = meals,                   modx.values = \"plus-minus\", cond.int = TRUE)  # 3-way with survey and factor input regmodel3 <- svyglm(api00 ~ ell * meals * sch.wide, design = dstrat) probe_interaction(model = regmodel3, pred = ell, modx = meals,                   mod2 = sch.wide) # Can try different configurations of 1st vs 2nd mod probe_interaction(model = regmodel3, pred = ell, modx = sch.wide,                   mod2 = meals) } #> Error in probe_interaction(model = regmodel, pred = ell, modx = meals,     modx.values = \"plus-minus\", cond.int = TRUE): object 'regmodel' not found"},{"path":"/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. generics glance, tidy","code":""},{"path":"/reference/sim_margins.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a simple margins analysis. — sim_margins","title":"Perform a simple margins analysis. — sim_margins","text":"sim_margins conducts simple margins analysis purposes understanding two- three-way interaction effects linear regression.","code":""},{"path":"/reference/sim_margins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a simple margins analysis. — sim_margins","text":"","code":"sim_margins(   model,   pred,   modx,   mod2 = NULL,   modx.values = NULL,   mod2.values = NULL,   data = NULL,   cond.int = FALSE,   vce = c(\"delta\", \"simulation\", \"bootstrap\", \"none\"),   iterations = 1000,   digits = getOption(\"jtools-digits\", default = 2),   pvals = TRUE,   confint = FALSE,   ci.width = 0.95,   cluster = NULL,   modx.labels = NULL,   mod2.labels = NULL,   ... )"},{"path":"/reference/sim_margins.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a simple margins analysis. — sim_margins","text":"model regression model. function tested lm, glm, svyglm, merMod, rq, brmsfit, stanreg models. Models classes may work well officially supported. model include interaction interest. pred name predictor variable involved interaction. can bare name string. Note evaluated using rlang, programmers can use !! syntax pass variables instead verbatim names. modx name moderator variable involved interaction. can bare name string. rlang proviso applies pred. mod2 Optional. name second moderator variable involved interaction. can bare name string. rlang proviso applies pred. modx.values values moderator lines plotted? two basic options: vector values (e.g., c(1, 2, 3)) single argument asking calculate set values. See details . Default NULL. NULL (mean-plus-minus), customary +/- 1 standard deviation mean well mean used continuous moderators. \"plus-minus\", plots lines moderator +/- 1 standard deviation without mean. may also choose \"terciles\" split data equally-sized groups choose point mean groups. moderator factor variable modx.values NULL, level factor included. may specify subset factor levels (e.g., c(\"Level 1\", \"Level 3\")) long 1. levels plotted order provide , can used reorder levels well. mod2.values values second moderator plot facetted ? , separate plot level moderator. Defaults modx.values. data Optional, default NULL. may provide data used fit model. can better way get mean values centering can crucial models variable transformations formula (e.g., log(x)) polynomial terms (e.g., poly(x, 2)). see warning function detects problems likely solved providing data argument function attempt retrieve original data global environment. cond.int conditional intercepts printed addition slopes? Default FALSE. vce character string indicating type estimation procedure use estimating variances. default (“delta”) uses delta method. Alternatives “bootstrap”, uses bootstrap estimation, “simulation”, averages across simulations drawn joint sampling distribution model coefficients. latter two extremely time intensive. iterations vce = \"bootstrap\", number bootstrap iterations. vce = \"simulation\", number simulated effects draw. Ignored otherwise. digits integer specifying number digits past decimal report output. Default 2. can change default number digits jtools functions options(\"jtools-digits\" = digits) digits desired number. pvals Show p values? FALSE, printed. Default TRUE. confint Show confidence intervals instead standard errors? Default FALSE. ci.width number 0 1 signifies width desired confidence interval. Default .95, corresponds 95% confidence interval. Ignored confint = FALSE. cluster clustered standard errors, provide column name cluster variable input data frame (string). Alternately, provide vector clusters. modx.labels character vector labels level moderator values, provided order modx.values argument. NULL, values used labels unless modx,values also NULL. case, \"+1 SD\" \"-1 SD\" used. mod2.labels character vector labels level 2nd moderator values, provided order mod2.values argument. NULL, values used labels unless mod2.values also NULL. case, \"+1 SD\" \"-1 SD\" used. ... ignored.","code":""},{"path":"/reference/sim_margins.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a simple margins analysis. — sim_margins","text":"list object following components: slopes table coefficients focal predictor value moderator ints table coefficients intercept value moderator modx.values values moderator used analysis","code":""},{"path":"/reference/sim_margins.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a simple margins analysis. — sim_margins","text":"allows user perform simple margins analysis purpose probing interaction effects linear regression. Two- three-way interactions supported, though one warned three-way interactions easy interpret way. function tested lm, glm, svyglm, merMod inputs. Others may work well, tested. linear model case, aware assumptions applied simple slopes analysis apply.","code":""},{"path":"/reference/sim_margins.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a simple margins analysis. — sim_margins","text":"Bauer, D. J., & Curran, P. J. (2005). Probing interactions fixed multilevel regression: Inferential graphical techniques. Multivariate Behavioral Research, 40(3), 373-400. doi:10.1207/s15327906mbr4003_5 Cohen, J., Cohen, P., West, S. G., & Aiken, L. S. (2003). Applied multiple regression/correlation analyses behavioral sciences (3rd ed.). Mahwah, NJ: Lawrence Erlbaum Associates, Inc. Hanmer, M. J., & Kalkan, K. O. (2013). Behind curve: Clarifying best approach calculating predicted probabilities marginal effects limited dependent variable models. American Journal Political Science, 57, 263–277. doi:10.1111/j.1540-5907.2012.00602.x","code":""},{"path":[]},{"path":"/reference/sim_margins.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform a simple margins analysis. — sim_margins","text":"Jacob Long jacob.long@sc.edu","code":""},{"path":"/reference/sim_margins_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidiers for sim_margins() objects. — tidy.sim_margins","title":"Tidiers for sim_margins() objects. — tidy.sim_margins","text":"can use broom::tidy() broom::glance() \"tidy\" methods storing sim_margins output.","code":""},{"path":"/reference/sim_margins_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidiers for sim_margins() objects. — tidy.sim_margins","text":"","code":"# S3 method for class 'sim_margins' tidy(x, conf.level = 0.95, ...)  # S3 method for class 'sim_margins' glance(x, ...)"},{"path":"/reference/sim_margins_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidiers for sim_margins() objects. — tidy.sim_margins","text":"x sim_margins object conf.level width confidence intervals. Default .95 (95%). ... Ignored.","code":""},{"path":"/reference/sim_slopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a simple slopes analysis. — sim_slopes","title":"Perform a simple slopes analysis. — sim_slopes","text":"sim_slopes conducts simple slopes analysis purposes understanding two- three-way interaction effects linear regression.","code":""},{"path":"/reference/sim_slopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a simple slopes analysis. — sim_slopes","text":"","code":"sim_slopes(   model,   pred,   modx,   mod2 = NULL,   modx.values = NULL,   mod2.values = NULL,   centered = \"all\",   at = NULL,   data = NULL,   cond.int = FALSE,   johnson_neyman = TRUE,   jnplot = FALSE,   jnalpha = 0.05,   robust = FALSE,   digits = getOption(\"jtools-digits\", default = 2),   pvals = TRUE,   confint = FALSE,   ci.width = 0.95,   cluster = NULL,   modx.labels = NULL,   mod2.labels = NULL,   v.cov = NULL,   v.cov.args = NULL,   ... )"},{"path":"/reference/sim_slopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a simple slopes analysis. — sim_slopes","text":"model regression model. function tested lm, glm, svyglm, merMod, rq, brmsfit, stanreg models. Models classes may work well officially supported. model include interaction interest. pred name predictor variable involved interaction. can bare name string. Note evaluated using rlang, programmers can use !! syntax pass variables instead verbatim names. modx name moderator variable involved interaction. can bare name string. rlang proviso applies pred. mod2 Optional. name second moderator variable involved interaction. can bare name string. rlang proviso applies pred. modx.values values moderator lines plotted? two basic options: vector values (e.g., c(1, 2, 3)) single argument asking calculate set values. See details . Default NULL. NULL (mean-plus-minus), customary +/- 1 standard deviation mean well mean used continuous moderators. \"plus-minus\", plots lines moderator +/- 1 standard deviation without mean. may also choose \"terciles\" split data equally-sized groups choose point mean groups. moderator factor variable modx.values NULL, level factor included. may specify subset factor levels (e.g., c(\"Level 1\", \"Level 3\")) long 1. levels plotted order provide , can used reorder levels well. mod2.values values second moderator plot facetted ? , separate plot level moderator. Defaults modx.values. centered vector quoted variable names mean-centered. \"\", non-focal predictors well pred variable centered. may instead pass character vector variables center. User can also use \"none\" base predictions variables set 0. response variable, modx, mod2 variables never centered. want manually set values variables model, providing named list names variables list values vectors values. Note alter values pred, modx, mod2 variables take precedence centered argument (variables unmentioned centered specified centered). linear models, change output conditional intercepts. data Optional, default NULL. may provide data used fit model. can better way get mean values centering can crucial models variable transformations formula (e.g., log(x)) polynomial terms (e.g., poly(x, 2)). see warning function detects problems likely solved providing data argument function attempt retrieve original data global environment. cond.int conditional intercepts printed addition slopes? Default FALSE. johnson_neyman Johnson-Neyman interval calculated? Default TRUE. can performed separately johnson_neyman. jnplot Johnson-Neyman interval plotted well? Default FALSE. jnalpha alpha level Johnson-Neyman interval? Default .05, corresponds 95% confidence interval. robust robust standard errors used find confidence intervals supported models? Default FALSE, specify type sandwich standard errors like use (.e., \"HC0\", \"HC1\", ). TRUE, defaults \"HC3\" standard errors. digits integer specifying number digits past decimal report output. Default 2. can change default number digits jtools functions options(\"jtools-digits\" = digits) digits desired number. pvals Show p values? FALSE, printed. Default TRUE. confint Show confidence intervals instead standard errors? Default FALSE. ci.width number 0 1 signifies width desired confidence interval. Default .95, corresponds 95% confidence interval. Ignored confint = FALSE. cluster clustered standard errors, provide column name cluster variable input data frame (string). Alternately, provide vector clusters. modx.labels character vector labels level moderator values, provided order modx.values argument. NULL, values used labels unless modx,values also NULL. case, \"+1 SD\" \"-1 SD\" used. mod2.labels character vector labels level 2nd moderator values, provided order mod2.values argument. NULL, values used labels unless mod2.values also NULL. case, \"+1 SD\" \"-1 SD\" used. v.cov function calculate variances model. Examples sandwich::vcovPC(). v.cov.args list arguments v.cov function. whichever argument fitted model, put \"model\". ... Arguments passed johnson_neyman summ.","code":""},{"path":"/reference/sim_slopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a simple slopes analysis. — sim_slopes","text":"list object following components: slopes table coefficients focal predictor value moderator ints table coefficients intercept value moderator modx.values values moderator used analysis mods list containing regression model created estimate conditional coefficients. jn johnson_neyman = TRUE, list johnson_neyman objects johnson_neyman. contain values interval plots. 2-way interaction, list length Otherwise, 1 johnson_neyman object value 2nd moderator 3-way interactions.","code":""},{"path":"/reference/sim_slopes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Perform a simple slopes analysis. — sim_slopes","text":"allows user perform simple slopes analysis purpose probing interaction effects linear regression. Two- three-way interactions supported, though one warned three-way interactions easy interpret way. Johnson-Neyman intervals, see johnson_neyman. function tested lm, glm, svyglm, merMod inputs. Others may work well, tested. linear model case, aware assumptions applied simple slopes analysis apply.","code":""},{"path":"/reference/sim_slopes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Perform a simple slopes analysis. — sim_slopes","text":"Bauer, D. J., & Curran, P. J. (2005). Probing interactions fixed multilevel regression: Inferential graphical techniques. Multivariate Behavioral Research, 40(3), 373-400. doi:10.1207/s15327906mbr4003_5 Cohen, J., Cohen, P., West, S. G., & Aiken, L. S. (2003). Applied multiple regression/correlation analyses behavioral sciences (3rd ed.). Mahwah, NJ: Lawrence Erlbaum Associates, Inc.","code":""},{"path":[]},{"path":"/reference/sim_slopes.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Perform a simple slopes analysis. — sim_slopes","text":"Jacob Long jacob.long@sc.edu","code":""},{"path":"/reference/sim_slopes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a simple slopes analysis. — sim_slopes","text":"","code":"# Using a fitted model as formula input fiti <- lm(Income ~ Frost + Murder * Illiteracy,   data = as.data.frame(state.x77)) sim_slopes(model = fiti, pred = Murder, modx = Illiteracy) #> JOHNSON-NEYMAN INTERVAL  #>  #> When Illiteracy is OUTSIDE the interval [0.68, 2.20], the slope of #> Murder is p < .05. #>  #> Note: The range of observed values of Illiteracy is [0.50, 2.80] #>  #> SIMPLE SLOPES ANALYSIS  #>  #> Slope of Murder when Illiteracy = 0.5604669 (- 1 SD):  #>  #>    Est.    S.E.   t val.      p #> ------- ------- -------- ------ #>   78.99   34.81     2.27   0.03 #>  #> Slope of Murder when Illiteracy = 1.1700000 (Mean):  #>  #>   Est.    S.E.   t val.      p #> ------ ------- -------- ------ #>   8.36   29.24     0.29   0.78 #>  #> Slope of Murder when Illiteracy = 1.7795331 (+ 1 SD):  #>  #>     Est.    S.E.   t val.      p #> -------- ------- -------- ------ #>   -62.28   41.49    -1.50   0.14 #>   # With svyglm if (requireNamespace(\"survey\")) { library(survey) data(api) dstrat <- svydesign(id = ~1, strata = ~stype, weights = ~pw,                     data = apistrat, fpc = ~fpc) regmodel <- svyglm(api00 ~ ell * meals, design = dstrat) sim_slopes(regmodel, pred = ell, modx = meals)  # 3-way with survey and factor input regmodel <- svyglm(api00 ~ ell * meals * sch.wide, design = dstrat) sim_slopes(regmodel, pred = ell, modx = meals, mod2 = sch.wide) } #> ██████████████████████ While sch.wide (2nd moderator) = No █████████████████████  #>  #> JOHNSON-NEYMAN INTERVAL  #>  #> The Johnson-Neyman interval could not be found. Is the p value for your #> interaction term below the specified alpha? #>  #> SIMPLE SLOPES ANALYSIS  #>  #> Slope of ell when meals = 18.72139 (- 1 SD):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -3.51   1.99    -1.76   0.08 #>  #> Slope of ell when meals = 48.22427 (Mean):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -1.98   1.25    -1.58   0.11 #>  #> Slope of ell when meals = 77.72716 (+ 1 SD):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.45   1.23    -0.37   0.71 #>  #> █████████████████████ While sch.wide (2nd moderator) = Yes █████████████████████  #>  #> JOHNSON-NEYMAN INTERVAL  #>  #> The Johnson-Neyman interval could not be found. Is the p value for your #> interaction term below the specified alpha? #>  #> SIMPLE SLOPES ANALYSIS  #>  #> Slope of ell when meals = 18.72139 (- 1 SD):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.93   0.83    -1.12   0.26 #>  #> Slope of ell when meals = 48.22427 (Mean):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.62   0.56    -1.12   0.26 #>  #> Slope of ell when meals = 77.72716 (+ 1 SD):  #>  #>    Est.   S.E.   t val.      p #> ------- ------ -------- ------ #>   -0.32   0.38    -0.84   0.40 #>"},{"path":"/reference/sim_slopes_tidiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidiers for sim_slopes() objects. — tidy.sim_slopes","title":"Tidiers for sim_slopes() objects. — tidy.sim_slopes","text":"can use broom::tidy() broom::glance() \"tidy\" methods storing sim_slopes output.","code":""},{"path":"/reference/sim_slopes_tidiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidiers for sim_slopes() objects. — tidy.sim_slopes","text":"","code":"# S3 method for class 'sim_slopes' tidy(x, conf.level = 0.95, ...)  # S3 method for class 'sim_slopes' glance(x, ...)"},{"path":"/reference/sim_slopes_tidiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidiers for sim_slopes() objects. — tidy.sim_slopes","text":"x sim_slopes object conf.level width confidence intervals. Default .95 (95%). ... Ignored.","code":""},{"path":"/news/index.html","id":"interactions-1209000","dir":"Changelog","previous_headings":"","what":"interactions 1.2.0.9000","title":"interactions 1.2.0.9000","text":"Enhancements: sim_slopes() now supports non-continuous variables pred argument. interact_plot() now provisional support factor predictors (pred). Users receive message possibility unexpected behavior. cat_plot() likewise support continuous moderators. (#54) Website documentation revamped upgraded. Users can now change axis labels johnson_neyman() plots via arguments y.label modx.label. (#56) Models produced panelr package better supported. Bug fixes: johnson_neyman() now handles non-syntactic variable names modx correctly. (#56) sim_slopes() longer displays results factor moderators reverse order factor’s levels. (#55) probe_interactions() longer errors certain combinations arguments provided. (#50) sim_slopes() longer errors ordered factors moderators. Thanks Jonathan Zadra suggesting fix. (#42)","code":""},{"path":"/news/index.html","id":"interactions-115","dir":"Changelog","previous_headings":"","what":"interactions 1.1.5","title":"interactions 1.1.5","text":"CRAN release: 2021-07-02 Made small change avoid testing errors forthcoming R release.","code":""},{"path":"/news/index.html","id":"interactions-114","dir":"Changelog","previous_headings":"","what":"interactions 1.1.4","title":"interactions 1.1.4","text":"Bugfix: sim_slopes() now correctly handles robust argument set TRUE FALSE. Many thanks Andy Field reporting issue. (#36)","code":""},{"path":"/news/index.html","id":"interactions-113","dir":"Changelog","previous_headings":"","what":"interactions 1.1.3","title":"interactions 1.1.3","text":"CRAN release: 2020-04-04 Minor fix: Plotting functions longer fail missing data moderator variable(s).","code":""},{"path":"/news/index.html","id":"interactions-112","dir":"Changelog","previous_headings":"","what":"interactions 1.1.2","title":"interactions 1.1.2","text":"Bugfixes: Plotting functions longer fail incomplete source data. Plotting functions now respect order modx.values mod2.values arguments. (#29) interact_plot() longer ignores point.alpha argument. (#25) Plotting functions now allow specify labels modx.values mod2.values passing named vector arguments. (#30) sim_slopes() now prints labels requested modx.labels mod2.labels arguments. (#32) Feature update: Plotting functions now better support brmsfit objects, particular multiple dependent variables distributional dependent variables. Use resp dpar arguments specify want use.","code":""},{"path":"/news/index.html","id":"interactions-111","dir":"Changelog","previous_headings":"","what":"interactions 1.1.1","title":"interactions 1.1.1","text":"CRAN release: 2019-07-05 Bugfixes: sim_slopes() longer fails getting Johnson-Neyman intervals merMod models. (#20) cat_plot() longer ignores pred.values pred.labels arguments. Thanks Paul Djupe alerting . tidy() method sim_slopes objects longer returns numbers strings. downstream effects , e.g., plot() method sim_slopes. (#22; thanks Noah Greifer) sim_slopes() now handles lmerModTest objects properly. Thanks Eric Shuman bringing attention.","code":""},{"path":"/news/index.html","id":"interactions-110","dir":"Changelog","previous_headings":"","what":"interactions 1.1.0","title":"interactions 1.1.0","text":"CRAN release: 2019-04-28","code":""},{"path":"/news/index.html","id":"new-function-sim_margins-1-1-0","dir":"Changelog","previous_headings":"","what":"New function: sim_margins()","title":"interactions 1.1.0","text":", name suggests, related sim_slopes(). However, instead slopes, estimated marginal effects. case OLS linear regression, basically thing. slope OLS expected change outcome 1-unit increase predictor. models, however, actual change outcome ’s 1-unit increase variable depends level covariates initial value predictor. logit model, instance, change probability different initial probability 50% (go quite bit ) 99.9% (can’t go ). sim_margins() uses margins package hood estimate marginal effects. Unlike sim_slopes(), default covariates involved interaction mean-centered, sim_margins() covariates always left observed values influence level marginal effect. Instead, marginal effect calculated covariates focal predictor (pred) observed values moderator(s) held specified values (e.g., mean 1 standard deviation /mean). advise using sim_margins() rather sim_slopes() analyzing models OLS regression.","code":""},{"path":"/news/index.html","id":"bug-fixes-1-1-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"interactions 1.1.0","text":"interact_plot() cat_plot() now respect user’s selection outcome.scale; 1.0.0, always plotted response scale. (#12) modx.values argument now better documented explain may use specify exact values want. Thanks Jakub Lysek asking question prompted . (#8) modx.values now accepts \"mean-plus-minus\" manual specification default auto-calculated values continuous moderators. NULL still defaults , can now make explicit code desired clarity guard future changes default behavior. Users now warned modx.values mod2.values include values outside observed range modx/mod2. (#9) Users now warned pred, modx, mod2 involved interaction provided model. (#10) cat_plot() ignoring mod2.values arguments now works properly. (#17) Missing values original data now handled better interact_plot() cat_plot(). sim_slopes() now handles non-syntactic variable names better. interactions now requires relatively new version rlang. Users older versions experiencing cryptic errors. (#15)","code":""},{"path":"/news/index.html","id":"feature-updates-1-1-0","dir":"Changelog","previous_headings":"","what":"Feature updates","title":"interactions 1.1.0","text":"interact_plot() cat_plot() now argument granular control values covariates. sim_slopes() now allows custom specification robust standard error estimators via providing function v.cov arguments v.cov.args.","code":""},{"path":"/news/index.html","id":"interactions-100","dir":"Changelog","previous_headings":"","what":"interactions 1.0.0","title":"interactions 1.0.0","text":"CRAN release: 2019-02-18 first release, look NEWS jtools prior version 2.0.0 give idea history functions package. follows accounting changes functions package since last jtools. Plots made interactions now new theme, can use , called theme_nice() (jtools package). previous default, theme_apa(), still available don’t like default since don’t think APA defined nicest-looking design guidelines general use. interact_plot() now appropriate coloring observed data moderator numeric (#1). previous versions use workaround involved tweaking alpha observed data points. interact_plot() cat_plot() now use tidy evaluation pred, modx, mod2 arguments. means can pass variable contains name pred/modx/mod2, useful creating function, loop, etc. using variable, put !! rlang package (e.g., pred = !! variable). users, changes affect usage. sim_slopes() longer prints coefficient tables data frames caused RStudio notebook users issues output printed console notebook format less--ideal ways. tables now markdown format might remind Stata’s coefficient tables. Thanks Kim Henry contacting .","code":""},{"path":"/news/index.html","id":"use-partial-residuals-for-plotting-1-0-0","dir":"Changelog","previous_headings":"","what":"Use partial residuals for plotting","title":"interactions 1.0.0","text":"One negative visualizing predictions alongside original data interact_plot() similar tools observed data may spread pick patterns. However, sometimes model controlling causes scattering, especially multilevel models random intercepts. Partial residuals include effects controlled-variables let see well model performs things accounted . can plot partial residuals instead observed data interact_plot() cat_plot() via argument partial.residuals = TRUE.","code":""},{"path":"/news/index.html","id":"important-changes-to-make_predictions-and-removal-of-plot_predictions-1-0-0","dir":"Changelog","previous_headings":"","what":"Important changes to make_predictions() and removal of plot_predictions()","title":"interactions 1.0.0","text":"jtools 1.0.0 release, introduced make_predictions() lower-level way emulate functionality effect_plot(), interact_plot(), cat_plot(). return list object predicted data, original data, bunch attributes containing information plot . One take object, class predictions, use main argument plot_predictions(), another new function creates plots see effect_plot() et al. simplified make_predictions() less specific plotting functions eliminated plot_predictions(), ultimately complex maintain caused problems separating interaction tools separate package. make_predictions() default simply creates new data frame predicted values along pred variable. longer accepts modx mod2 arguments. Instead, accepts argument called user can specify number variables values generate predictions . syntax designed similar predictions/margins packages. See jtools documentation info revised syntax.","code":""}]
